#!/bin/sh
default=0
default_layout=1

layouts_file="${XDG_CONFIG_HOME:-$HOME/.config}/barlayouts_icons"
signals_file="${XDG_CONFIG_HOME:-$HOME/.config}/barsignals"
descriptions_file="${XDG_CONFIG_HOME:-$HOME/.config}/bar_layouts_descriptions"
layout_file="${XDG_CACHE_HOME:-$HOME/.cache}/barlayout"

[ ! -f "$layout_file" ] && echo "$default" > "$layout_file"
[ ! -f "$layouts_file" ] && echo "$default_layout" > "$layouts_file"
current="$(cat "$layout_file")"

block(){
	printf " %s" "$(sed "$(($1 + 1))q;d" $layouts_file)"
}

change(){
    current=$1
    layouts_count=$(wc -l < $layouts_file)

    if [ $current -lt $layouts_count ]; then
        current=$(($current + 1))
    else
        current=0
    fi

    icon="$(sed "$((current + 1))q;d" $layouts_file)"
    echo "$current" > $layout_file
    notify-send -u low "changed layout: $icon"

    signals="$(tr ' ' '\n' < $signals_file | sort -n | uniq)"
    blockspid=$(pidof dwmblocks)

    for sig in $signals; do
        # pkill -RTMIN+$sig blocks
        kill "-$(($sig + 34))" "$blockspid" 2>/dev/null &1>2 # faster way ?
    done

    block $current
}

layouts(){
    i=0
    layouts_count=$(wc -l < $layouts_file)

    while [ $i -le $layouts_count ]; do
        description="$(eval "for word in $(sed "$((i + 1))q;d" $descriptions_file); do echo \$word; done")"

        notify-send -u low "Status bar layout $(sed "$((current + 1))q;d" $layouts_file):
$description"

        ((i++))
    done
}

case $BLOCK_BUTTON in
	1) change $current ;;
	2) layouts ;;
	3) layouts ;;
	# 4) change ;;  # scroll up
	# 5) change ;;  # scroll down
	6) layouts ; "$TERMINAL" -e "$EDITOR" "$0" ;;
	*) block $current ;;
esac
